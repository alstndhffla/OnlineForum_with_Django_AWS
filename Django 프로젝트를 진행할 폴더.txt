C:\Users\pahkey> cd \
C:\> mkdir venvs
C:\> cd venvs


C:\venvs> python -m venv mysite


C:/venvs 디렉터리 아래에 mysite라는 디렉터리가 생성되었을 것이다. 
이 디렉터리를 가상 환경이라 생각하면 된다

가상 환경에 진입하려면 우리가 생성한 mysite 가상 환경에 있는 Scripts 디렉터리의 activate 명령을 수행해야 한다. 
다음 명령을 입력하여 mysite 가상 환경에 진입해 보자.

C:\venvs>cd C:\venvs\mysite\Scripts
C:\venvs\mysite\Scripts> activate
(mysite) C:\venvs\mysite\Scripts>

현재 진입한 가상 환경에서 벗어나려면 deactivate라는 명령을 실행하면 된다. 
이 명령은 어느 위치에서 실행해도 상관없다.

가상 환경에서 벗어났다면 C:/ 왼쪽에 있던 (mysite)라는 프롬프트가 사라졌을 것이다. 

mysite 가상 환경에 진입한 상태에서 pip install django==3.1.3 명령을 입력하자. 
pip은 파이썬 라이브러리를 설치하고 관리해 주는 파이썬 도구이다


장고에는 프로젝트라는 개념이 있는데, 장고의 프로젝트는 하나의 웹 사이트라고 생각하면 된다. 
즉, 장고 프로젝트를 생성하면 한 개의 웹 사이트를 생성하는 것과 같다. 
프로젝트 안에는 여러 개의 앱이 존재한다. 이 앱들이 모여 웹 사이트를 구성한다. 
여기서 앱이란 관리자 앱, 인증 앱 등과 같이 장고가 기본으로 제공하는 앱과 개발자가 직접 만든 앱을 칭한다.

장고 프로젝트는 여러 개가 될 수 있으므로 프로젝트를 모아 둘 프로젝트 루트 디렉터리 생성은 필수다. 
여기서는 프로젝트 루트 디렉터리 이름을 projects

C:\>mkdir projects
C:\>cd projects
C:\projects>


C:\projects>C:\venvs\mysite\Scripts\activate
(mysite) C:\projects>

장고 프로젝트를 담을 mysite 디렉터리를 생성하고 이동

(mysite) C:\projects>mkdir mysite
(mysite) C:\projects>cd mysite
(mysite) C:\projects\mysite>


mysite 디렉터리에서 django-admin이라는 도구로 장고 프로젝트를 생성하자. 이때 config 다음에 점 기호(.)
점 기호는 '현재 디렉터리를 프로젝트 디렉터리로 만들라'는 의미

(mysite) C:\projects\mysite>django-admin startproject config .


개발 서버구동하기
python manage.py runserver 명령을 실행하면 개발 서버가 구동된다. 

실행문 맨 아랫줄에는 'Quit the server with CTRL-BREAK'이라는 개발 서버 종료 방법도 안내
개발 서버를 종료하려면 <Ctrl+C>를 누르란 뜻


개발 서버가 구동된 상태를 유지하고 웹 브라우저를 이용하여 127.0.0.1:8000에 접속. 
그러면 장고가 기본으로 만든 웹 사이트 화면을 볼 수 있다.

- 개발 서버는 127.0.0.0, 즉 로컬호스트localhost로 실행되므로 로컬 서버라 부르기도 함. 
- 127.0.0.1:8000 대신 localhost:8000이라고 입력해도 같은 화면을 볼 수 있다. 127.0.0.1과 localhost는 현재 컴퓨터를 가리키는 아이피 주소

아직은 개발 서버 환경에서 사이트가 실행되고 있으므로 개발 서버 환경을 실행한 컴퓨터에서만 사이트에 접속할 수 있다. 
즉, 아직은 다른 사람이 접속할 수 있는 상태가 아니다.

<Ctrl+C> 를 눌러 개발 서버를 종료. 개발 서버가 종료되면 localhost:8000으로 mysite에 접속할 수 없다. 
웹 브라우저에서 새로고침을 누르면 사이트에 연결할 수 없다는 안내가 나온다.

다른 사람이 내가 만든 사이트에 접속하려면 localhost나 127.0.0.1이라는 로컬 아이피 주소가 아닌 
15.165.210.240과 같은 인터넷 세상 속의 아이피 주소 또는 forum.kr과 같은 도메인이 필요.


--------------------------------------------
mysite 가상 환경에 진입하려면 매번 명령 프롬프트를 실행하고 C:/venvs/mysite/Scripts 디렉터리로 이동하여 activate 명령을 수행해야 한다. 
수고를 덜기 위해 이런 일련의 과정을 한 번에 수행할 수 있는 배치 프로그램을 만든다.

mysite.cmd 파일을 venvs 디렉터리에 만들고 아래와 같이 작성하여 저장. 
확장자 .cmd가 붙은 파일은 배치(batch) 파일이라 부르며, 명령어 입력과 실행을 한 번에 해주는 파일
@echo off
cd c:/projects/mysite
c:/venvs/mysite/scripts/activate


배치 파일의 내용은 C:/projects/mysite 디렉터리로 이동한 다음, C:/venvs/mysite/scripts/activate 명령을 수행하라는 뜻

이 배치 파일이 명령 프롬프트 어느 곳에서나 수행될 수 있도록 C:/venvs 디렉터리를 시스템의 환경 변수 PATH에 추가해야 함.
먼저 <윈도우키+R> 키를 입력하여 다음처럼 sysdm.cpl 명령을 입력한 다음 <확인>을 클릭.
'시스템 속성' 창이 나타난다. 여기서 <고급> 탭을 선택하고 <환경 변수> 버튼
'환경 변수' 창이 나타난다. 여기서 사용자 변수 중 <Path>를 선택하고 <편집> 버튼
'환경 변수 편집' 창이 나타난다. 여기서 <새로 만들기> 버튼
C:/venvs라는 디렉터리를 추가하고 <확인> 버튼
끝.
이렇게 하면 환경 변수 PATH에 C:/venvs 디렉터리가 추가되어 mysite.cmd 명령을 어디서든 실행할 수 있다.

----------------------------------------------

만든 mysite 명령(배치 파일 이름)을 실행하여 가상 환경에 잘 진입하는지 확인. 
참고로 윈도우에서 확장자가 .cmd인 파일은 확장자를 빼고 입력해도 된다.

C:\Users\pahkey> mysite
(mysite) C:\projects\mysite>


파이참 실행시 <Open>을 선택하여 앞에서 생성한 장고 프로젝트인 C:/projects/mysite를 선택
파이참으로 장고 프로젝트를 불러온 후 가장 먼저 해야 할 일은 장고 프로젝트가 바라봐야 할 파이썬 인터프리터 위치를 설정하는 것

[File → Settings]를 눌러 설정 창을 열고 [Project: mysite → Project Interpreter]를 순서대로 눌러 
파이썬 인터프리터 위치를 설정할 수 있는 창 오픈.

Python Interpreter 오른쪽에 보이는 톱니바퀴 모양 아이콘을 누른 다음 <Add>

'Add Python Interpreter' 창이 나타난다. 여기서 <Existing environment>를 누른 다음 Interpreter 오른쪽에 보이는 <...>

C:/venvs/mysite/Scripts/python.exe를 선택한 후 <OK>

나머지 창들도 확인을 눌러 설정을 마치면 파이참이 mysite 가상 환경에 있는 파이썬 인터프리터를 인식하기 시작함.

settings.py 파일을 열어 LANGUAGE_CODE와 TIME_ZONE 설정값을 수정. 
LANGUAGE_CODE를 en-us에서 ko-kr로 수정하고 TIME_ZONE을 UTC에서 Asia/Seoul로 수정. 언어와 시간을 한국 값으로 바꾼 것


명령프롬프트에서 python manage.py runserver로 서버 구동!
(mysite) c:\projects\mysite>python manage.py runserver
이후 웹페이지에서 localhost:8000으로 접속하면 초기 화면이 영어에서 한글로 바뀌어 있다.

---------------------------------------------------
명령 프롬프트에서 django-admin의 startapp 명령을 이용하여 forum 앱을 생성

서버구동!
(mysite) c:\projects\mysite>python manage.py runserver 

웹페이지에서 localhost:8000/forum 입력
404는 HTTP 오류 코드 중 하나로, 사용자가 요청한 페이지를 찾을 수 없는 경우 발생하는 오류이다. 
장고는 오류 발생 시 오류 원인을 웹 브라우저 또는 명령 프롬프트에 자세히 보여 준다.
이 오류는 왜 발생했을까? 장고는 사용자가 웹 브라우저에서 /forum/라는 페이지를 요청하면 해당 페이지를 가져오는 URL 매핑이 있는지
config/urls.py 파일을 뒤져 찾아본다. 그런데 아직 /forum/ 페이지에 해당하는 URL 매핑을 장고에 등록하지 않았다.
그래서 장고는 /forum/ 페이지를 찾을 수 없다고 메시지를 보낸 것





